(begin
    (input incomingval)
    (input gate)
    (define flip-flop
        (lambda (gate var)
            (begin
                (defvar val 0)
                (define ret val)
                (set! val (? gate var ret))
                ret)))

    (define running-avg
        (lambda (size gate incomingval)
            (begin
                (define avg 0)
                (fold 
                    (lambda (last new) 
                        (begin
                            (set! avg (+ avg last))
                            (flip-flop gate last)))
                incomingval (iota size 0 1))
            (/ avg size))))
    (observe "out" (running-avg 10 gate incomingval)))

(test test-1
    (inject gate 1)
    (inject incomingval 1)
    (stabilize)
    (expect out 0.1)

    (inject gate 2)
    (stabilize)
    (expect out 0.2)

    (inject gate 3)
    (stabilize)
    (expect out 0.3)

    (inject gate 4)
    (stabilize)
    (expect out 0.4)

    (inject gate 5)
    (stabilize)
    (expect out 0.5)

    (inject gate 6)
    (stabilize)
    (expect out 0.6)

    (inject gate 7)
    (stabilize)
    (expect out 0.7)

    (inject gate 8)
    (stabilize)
    (expect out 0.8)

    (inject gate 9)
    (stabilize)
    (expect out 0.9)

    (inject gate 10)
    (stabilize)
    (expect out 1.0))
