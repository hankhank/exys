(begin
    (input list double degen 1)
    (input list double onedim 2)
    (input list double twodim 2 2)
    (input list double threedim 3 3 3)
    (observe degen (car degen))
    (observe onedim (fold + 0 onedim))
    (define sum-fold (lambda (x) (fold + 0 x)))
    (define map-sum-fold (lambda (x) (map sum-fold x)))
    (observe twodim (sum-fold (map sum-fold twodim)))
    (observe threedim (sum-fold (map sum-fold (map map-sum-fold threedim)))))

(test Test-1
    (inject degen (1))
    (inject onedim (1 2))
    (inject twodim ((1 2) 
                    (3 4)))
    (inject threedim ((1 2 3)
                      (4 5 6)
                      (7 8 9))
    (stabilize)
    (expect degen 1)
    (expect onedim 3)
    (expect twodim 10)
    (expect threedim 45)))
