(begin 
    (input double in)
    (define lmbd in)

    (input double b0.price
                  b1.price
                  b2.price
                  b3.price
                  b0.volume
                  b1.volume
                  b2.volume
                  b3.volume)

    (input double a0.price
                  a1.price
                  a2.price
                  a3.price
                  a0.volume
                  a1.volume
                  a2.volume
                  a3.volume)

    (define bids (list b0.price
                       b1.price
                       b2.price
                       b3.price))
    (define asks (list a0.price
                       a1.price
                       a2.price
                       a3.price))

    (define bidsum 0)
    (define refprice 0)
    (for-each (lambda(price) 
         (set! bidsum (+ bidsum (* (+ price refprice) lmbd)))) bids)

    (observe bidsum out))
